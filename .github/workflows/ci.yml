name: CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

env:
  ORG_IMG_BASE: ghcr.io/reggiemarr/rebel-droid-ap-25

jobs:
  check-docker-changes:
    runs-on: ubuntu-latest
    outputs:
      docker_changed: ${{ steps.check_files.outputs.docker_changed }}
    steps:
    - uses: actions/checkout@v2
    - name: Check if Docker-related files changed
      id: check_files
      run: |
        git fetch origin ${{ github.event.before }}
        CHANGED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
        if echo "$CHANGED_FILES" | grep -q -E "Dockerfile|.env|docker-compose.yml|.github/workflows|entrypoint.sh"; then
          echo "Docker-related files changed"
          echo "docker_changed=true" >> $GITHUB_OUTPUT
        else
          echo "No Docker-related files changed"
          echo "docker_changed=false" >> $GITHUB_OUTPUT
        fi


  build-docker:
    permissions:
        contents: read
        packages: write

    needs: check-docker-changes
    if: needs.check-docker-changes.outputs.docker_changed == 'true'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Build and push Docker image
      run: |
        # Create a valid tag by removing invalid characters
        BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/} | sed 's/[^a-zA-Z0-9._-]/_/g')
        ORG_IMG_TAG=${BRANCH_NAME}
        ORG_IMG=${{ env.ORG_IMG_BASE }}:${ORG_IMG_TAG}

        echo "Debug: GITHUB_REF = ${GITHUB_REF}"
        echo "Debug: BRANCH_NAME = ${BRANCH_NAME}"
        echo "Debug: ORG_IMG_TAG = ${ORG_IMG_TAG}"
        echo "Debug: ORG_IMG = ${ORG_IMG}"

        echo "Building Docker image: ${ORG_IMG}"
        ./run.sh docker-build --clean

        echo "Tagging Docker image"
        docker tag ${{ env.ORG_IMG_BASE }}:latest ${ORG_IMG}

        echo "Pushing Docker image"
        docker push ${ORG_IMG}

        echo "ORG_IMG_TAG=${ORG_IMG_TAG}" >> $GITHUB_OUTPUT

  build-and-run:
    needs: [check-docker-changes, build-docker]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GHCR_TOKEN }}

    - name: Set Docker tag
      run: |
        ORG_IMG_TAG=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//_/g')
        echo "ORG_IMG_TAG=$ORG_IMG_TAG" >> $GITHUB_ENV
        echo "ORG_IMG=${{ env.ORG_IMG_BASE }}:$ORG_IMG_TAG" >> $GITHUB_ENV

    - name: Pull Docker image
      run: docker pull ${{ env.ORG_IMG }}

    - name: Exec this projects README.org
      run: |
        echo "Using image ${{ env.ORG_IMG }}"
        ./run.sh exec-babel README.org

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          ./org_out/workflow.svg
          ./org_out/workflow.plantuml
